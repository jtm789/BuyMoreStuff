@model BuyMoreStuff.ViewModels.CartViewModel

<script src="@Url.Content("~/Scripts/knockout-2.1.0.js")" type="text/javascript"></script>

@{
    ViewBag.Title = "Buy More Stuff";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Cart</legend>

        <table>

        <thead>
        <tr>
        <th>Product</th>
        <th>Quantity</th>
        <th>Price</th>
        <th>&nbsp;</th>
        </tr>
        </thead>

        <tbody data-bind="foreach: lines">
        <tr>
        <td>
            <input type="hidden" data-bind="value: productId, attr: {name: 'Cart.Lines[' + $index() + '].ProductId'}" />
            <span data-bind="text: productName"></span>
        </td>
        <td><input type="text" data-bind="value: quantity, attr: {name: 'Cart.Lines[' + $index() + '].Quantity'}" /></td>
        <td data-bind="text: unitPrice * quantity()"></td>
        <td><button type="button" data-bind="click: remove">-</button></td>
        </tr>
        </tbody>

        </table>
        <br />
        <select data-bind="value: selectedProduct">
            @foreach (var product in Model.Products)
            {
                <option value="({
                    'id': @product.Id,
                    'name': '@product.Name',
                    'unitPrice': @product.UnitPrice
                })">@product.Name</option>
            }
        </select>
        <button type="button" data-bind="click: addLine">+</button>

        <p>
            <input type="submit" value="Checkout" />
        </p>
    </fieldset>
}

<script type="text/javascript">
    var Line = function (container, productId, productName, unitPrice, quantity) {
        this.productId = productId;
        this.productName = productName;
        this.unitPrice = unitPrice;

        this.quantity = ko.observable(quantity);

        this.remove = function() {
            container.lines.remove(this);
        }.bind(this);
    }

    var ViewModel = function () {
        this.lines = ko.observableArray([
        @if (Model != null && Model.Cart != null && Model.Cart.Lines != null)
        {
            foreach (var line in Model.Cart.Lines)
            {
                var product = Model.GetProductById(line.ProductId);
                if (product != null)
                {
                    @:new Line(this, @line.ProductId, "@product.Name", @product.UnitPrice, @line.Quantity),
                }
            }
        }
        ]);

        this.selectedProduct = ko.observable();

        this.addLine = function () {
            var product = eval(this.selectedProduct());
            this.lines.push(new Line(this, product.id, product.name, product.unitPrice, 1));
        } .bind(this);
    };

    ko.applyBindings(new ViewModel());
</script>